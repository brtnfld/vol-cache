name: Test HDFGroup/hdf5-latest

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events for the develop branch
  push:
    branches: [ develop ]
  # Allows you to run this workflow manually from the Actions tab    
  workflow_dispatch:
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    - name: Checkout vol-cache
      uses: actions/checkout@v4.1.1
    - name: Checkout latest HDF5 release
      run: |
        wget https://github.com/HDFGroup/hdf5/releases/latest/download/hdf5.tar.gz
        tar xzf hdf5.tar.gz
        ln -sf hdf5-* hdf5
    - name: Checkout Argobots
      uses: actions/checkout@v4.1.1
      with:
        repository: pmodels/argobots
        path: abt
    - name: Checkout vol-async
      uses: actions/checkout@v4.1.1
      with:
        repository: hpc-io/vol-async
        path: vol-async
    
    - name: Install dependencies
      run: sudo apt-get install ninja-build automake autoconf libtool libtool-bin libopenmpi-dev
    - name: Install HDF5
      run: |
        cmake --version
        mkdir -p hdf5/build
        cd hdf5/build
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DHDF5_ENABLE_PARALLEL:BOOL=ON -DHDF5_ENABLE_THREADSAFE:BOOL=ON -DALLOW_UNSUPPORTED:BOOL=ON ..
        sudo make -j2 install
        cd ..
        git rev-parse HEAD > git.txt
    - name: Install Argobots
      run: |
        cd abt
        ./autogen.sh
        ./configure --prefix=/usr/local
        make -j2
        sudo make -j2 install
        cd ..
    - name: Install vol-async
      env:
        CXX: mpic++
        CC: mpicc
      run: |
        mkdir vol-async/build
        cd vol-async/build
        ls ..
        cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local
        ls
        cat Makefile
        ls /usr/local/lib
        sudo make -j2 install
        cd ..
    - name: Install vol-cache
      env:
        CXX: mpic++
        CC: mpicc
        HDF5_PLUGIN_PATH: /usr/local/lib
        HDF5_VOL_CONNECTOR: cache_ext config=cache_1.cfg\;under_vol=0\;under_info={}\;
        ABT_DIR: /usr/local/
        HDF5_VOL_DIR: /usr/local/
        HDF5_ROOT: /usr/local/
        LD_PRELOAD: /usr/local/lib/libabt.so
        LD_LIBRARY_PATH: /usr/local/lib:$LD_LIBRARY_PATH
      run: |
        mkdir build
        cd build
        cmake ..
        sudo make -j2 install
        ls /usr/local/lib
        ctest --output-on-failure
        
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: git.txt
        path: ${{ runner.workspace }}/vol-cache/hdf5/git.txt
