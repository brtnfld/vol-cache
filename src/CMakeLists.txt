set(HDF5_VOL_CACHE_HEADERS
  ${CMAKE_CURRENT_SOURCE_DIR}/H5VLcache_ext.h
  ${CMAKE_CURRENT_SOURCE_DIR}/cache_new_h5api.h
)

set(HDF5_VOL_CACHE_SRCS
    ${CMAKE_CURRENT_SOURCE_DIR}/cache_utils.c
    ${CMAKE_CURRENT_SOURCE_DIR}/cache_new_h5api.c
    ${CMAKE_CURRENT_SOURCE_DIR}/H5LS.c
    ${CMAKE_CURRENT_SOURCE_DIR}/H5LS_SSD.c
    ${CMAKE_CURRENT_SOURCE_DIR}/H5LS_RAM.c
    ${CMAKE_CURRENT_SOURCE_DIR}/../utils/debug.c
)


add_library(h5cache_vol SHARED ${HDF5_VOL_CACHE_SRCS})
add_library(cache_new_h5api STATIC ${CMAKE_CURRENT_SOURCE_DIR}/cache_new_h5api.c)

target_include_directories(h5cache_vol
  PRIVATE ${CMAKE_CURRENT_SOURCE_DIR} ${ASYNC_INCLUDE_DIR}
)

set(CACHE_LINK_LIBRARIES
    PRIVATE
    ${MPI_LIBRARIES}
    ${HDF5_LIBRARIES}
    ${ASYNC_LIBRARIES}
)


target_link_libraries(h5cache_vol PRIVATE ${CACHE_LINK_LIBRARIES})
target_link_libraries(cache_new_h5api PRIVATE ${CACHE_LINK_LIBRARIES})

install(
  FILES
    ${HDF5_VOL_CACHE_HEADERS}
  DESTINATION
    ${HDF5_VOL_CACHE_INSTALL_INCLUDE_DIR}
  COMPONENT
    headers
)

install(
  TARGETS
    h5cache_vol
    cache_new_h5api
  EXPORT
    ${HDF5_VOL_CACHE_EXPORTED_TARGETS}
  LIBRARY DESTINATION ${HDF5_VOL_CACHE_INSTALL_LIB_DIR}
  ARCHIVE DESTINATION ${HDF5_VOL_CACHE_INSTALL_LIB_DIR}
)
