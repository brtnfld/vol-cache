stages:
 - build-stage-1
 - build-stage-2
 - build-stage-3
 - build-stage-4
 - tests

variables:
   ANL_THETA_PROJECT_SERVICE_USER: "exaio"

# Setting up environment
before_script:
 - export TOPDIR=$PWD
 - export SDK_DIR=$TOPDIR/soft
 - export EXAHDF5_ROOT=$TOPDIR
 - export SDK_DIR=$EXAHDF5_ROOT/soft/
 - mkdir $SDK_DIR
 - export HDF5_ROOT=$SDK_DIR/hdf5/
 - mkdir $HDF5_ROOT
 - export HDF5_HOME=$HDF5_ROOT
 - export HDF5_DIR=$HDF5_ROOT
 - export HDF5_VOL_DIR=$SDK_DIR/hdf5/vol/
 - mkdir $HDF5_VOL_DIR
 - mkdir $HDF5_VOL_DIR/lib/
 - mkdir $HDF5_VOL_DIR/include/
 - export ABT_DIR=$SDK_DIR/argobots/
 - mkdir $ABT_DIR
 - export PATH=$EXAHDF5_ROOT/soft/h5bench/bin:$PATH
 - export LD_LIBRARY_PATH=$ABT_DIR/lib:$LD_LIBRARY_PATH
 - export LD_LIBRARY_PATH=$HDF5_ROOT/lib:$HDF5_VOL_DIR/lib:$LD_LIBRARY_PATH
 - export HDF5_PLUGIN_PATH=$HDF5_VOL_DIR/lib
 - export HDF5_VOL_CONNECTOR="cache_ext config=conf1.dat;under_vol=512;under_info={under_vol=0;under_info={}}"
 - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HDF5_PLUGIN_PATH


build-hdf5:
 stage: build-stage-1
 tags: [shell, ecp-theta, anl]
 script:
   - git clone -b post_open_fix https://github.com/hpc-io/hdf5.git
   - cd hdf5
   - ./autogen.sh
   - ./configure --prefix=$HDF5_DIR --enable-parallel --enable-threadsafe --enable-unsupported
   - make && make install
   - cd -

build-argobots:
 stage: build-stage-1
 tags: [shell, ecp-theta, anl]
 script:
   - git clone https://github.com/pmodels/argobots.git
   - cd argobots
   - ./autogen.sh
   - ./configure --prefix=$ABT_DIR
   - make && make install
   - cd -

build-async-vol:
 stage: build-stage-2
 tags: [shell, ecp-theta, anl]
 script:
   - git clone https://github.com/hpc-io/vol-async.git
   - cd vol-async/src
   - tail -n 48 Makefile.summit > Makefile
   - make
   - cp lib* $HDF5_VOL_DIR/lib
   - cp *.h $HDF5_VOL_DIR/include
   - cd -
 dependencies:
   - build-hdf5
   - build-argobots

build-cache-vol:
  stage: build-stage-3
  tags: [shell, ecp-theta, anl]
  script:
    - cd ./src
    - make all
    - cd ../benchmarks
    - make all
    - cd ../tests
    - make all
    - mkdir SSD
    - cd ../
  dependencies:
    - build-async-vol
  artifacts:
    name: "./tests"
    paths:
      - ./tests

build-h5bench:
  stage: build-stage-4
  tags: [shell, ecp-theta, anl]
  script:
    - git clone https://github.com/hpc-io/h5bench.git
    - cd h5bench
    - git pull https://github.com/zhenghh04/h5bench.git
    - cd -
    - mkdir h5bench/build
    - cd h5bench/build
    - cmake .. -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DCMAKE_INSTALL_PREFIX=$SDK_DIR/h5bench  -DWITH_CACHE_VOL:BOOL=ON -DWITH_ASYNC_VOL:BOOL=ON -DCMAKE_C_FLAGS="-I/$HDF5_VOL_DIR/include -L/$HDF5_VOL_DIR/lib -g"
    - make all install VERBOSE=1
    - cd -
  dependencies:
    - build-async-vol
    - build-cache-vol
    - build-hdf5


test-cache-vol-node-local:
  stage: tests
  variables:
    ANL_THETA_SCHEDULER_PARAMETERS: "-A CSC250STDM10 -n 1 -t 30 -q debug-flat-quad"
  tags: [batch, ecp-theta, anl]
  script:
    - cd tests
    - export DEBUG=2
    - module load intel
    - module load cray-mpich-abi
    - module load gcc
    - export MPICH_MAX_THREAD_SAFETY="multiple"
    - export LD_LIBRARY_PATH=/opt/cray/pe/mpt/7.7.14/gni/mpich-intel-abi/16.0/lib:$LD_LIBRARY_PATH
    - printf "HDF5_CACHE_STORAGE_TYPE SSD\nHDF5_CACHE_STORAGE_PATH SSD\nHDF5_CACHE_STORAGE_SCOPE LOCAL\nHDF5_CACHE_STORAGE_SIZE 128755813888\nHDF5_CACHE_WRITE_BUFFER_SIZE 17179869184" > conf1.dat
    - export opt=no
    - HDF5_CACHE_WR=$opt aprun -n 2 ./test_dataset
    - HDF5_CACHE_WR=$opt aprun -n 2 ./test_dataset_async_api
    - HDF5_CACHE_WR=$opt aprun -n 2 ./test_group
    - HDF5_CACHE_WR=$opt aprun -n 2 ./test_file
    - HDF5_CACHE_WR=$opt aprun -n 2 h5bench_write ./test_h5bench.cfg test_local.h5
    - rm test.h5
    - export opt=yes
    - HDF5_CACHE_WR=$opt aprun -n 2 ./test_dataset
    - HDF5_CACHE_WR=$opt aprun -n 2 ./test_dataset_async_api
    - HDF5_CACHE_WR=$opt aprun -n 2 ./test_group
    - HDF5_CACHE_WR=$opt aprun -n 2 ./test_file
    - HDF5_CACHE_WR=$opt aprun -n 2 h5bench_write ./test_h5bench.cfg test_local.h5
    - cd -
  dependencies:
    - build-hdf5
    - build-async-vol
    - build-cache-vol
    - build-h5bench

test-cache-vol-global:
  stage: tests
  variables:
    ANL_THETA_SCHEDULER_PARAMETERS: "-A CSC250STDM10 -n 1 -t 30 -q debug-flat-quad"
  tags: [batch, ecp-theta, anl]
  script:
    - export HDF5_VOL_CONNECTOR="cache_ext config=conf2.dat;under_vol=512;under_info={under_vol=0;under_info={}}"
    - cd tests
    - export DEBUG=2
    - module load intel
    - module load cray-mpich-abi
    - module load gcc
    - export MPICH_MAX_THREAD_SAFETY="multiple"
    - export LD_LIBRARY_PATH=/opt/cray/pe/mpt/7.7.14/gni/mpich-intel-abi/16.0/lib:$LD_LIBRARY_PATH
    - printf "HDF5_CACHE_STORAGE_TYPE SSD\nHDF5_CACHE_STORAGE_PATH SSD\nHDF5_CACHE_STORAGE_SCOPE GLOBAL\nHDF5_CACHE_STORAGE_SIZE 128755813888\nHDF5_CACHE_WRITE_BUFFER_SIZE 17179869184" > conf2.dat
    - export opt=no
    - HDF5_CACHE_WR=$opt aprun -n 2 ./test_dataset
    - HDF5_CACHE_WR=$opt aprun -n 2 ./test_dataset_async_api
    - HDF5_CACHE_WR=$opt aprun -n 2 ./test_group
    - HDF5_CACHE_WR=$opt aprun -n 2 ./test_file
    - HDF5_CACHE_WR=$opt aprun -n 2 h5bench_write ./test_h5bench.cfg test.h5
    - rm test.h5
    - export opt=yes
    - HDF5_CACHE_WR=$opt aprun -n 2 ./test_dataset
    - HDF5_CACHE_WR=$opt aprun -n 2 ./test_dataset_async_api
    - HDF5_CACHE_WR=$opt aprun -n 2 ./test_group
    - HDF5_CACHE_WR=$opt aprun -n 2 ./test_file
    - HDF5_CACHE_WR=$opt aprun -n 2 h5bench_write ./test_h5bench.cfg test.h5
    - cd -
  dependencies:
    - build-hdf5
    - build-async-vol
    - build-cache-vol
    - build-h5bench
  